{"version":3,"file":"static/js/417.9d0158a4.chunk.js","mappings":"sQAEaA,EAAOC,EAAAA,GAAAA,GAAH,mLAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAMGC,EAAOJ,EAAAA,GAAAA,GAAH,oMAGE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKPE,EAAYL,EAAAA,GAAAA,IAAH,6CAITM,EAAQN,EAAAA,GAAAA,IAAH,+EAMLO,EAAOP,EAAAA,GAAAA,EAAH,uFACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,mBCWd,MApCA,WACE,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,iBACoBN,GACjBO,MAAK,SAAAC,GAAK,OAAIJ,GAAQ,OAAII,EAAML,MAAtB,IACVM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,IAEAG,EAAKU,OAAS,EACT,MAIP,SAACtB,EAAD,UACGY,EAAKW,KAAI,SAAAC,GACR,IAAQf,EAA2Be,EAA3Bf,GAAIgB,EAAuBD,EAAvBC,aAAcC,EAASF,EAATE,KACpBC,EAAeF,EAAY,yCACKA,GAClCG,EACJ,OACE,UAACvB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAOsB,IAAKF,EAAcG,IAAKJ,OAGjC,SAAClB,EAAD,UAAOkB,MALEjB,EAQd,KAGN,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  border-radius: ${p => p.theme.space[3]}px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  overflow: hidden;\n`;\n\nexport const ImageWrap = styled.div`\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Text = styled.p`\n  padding: ${p => p.theme.space[3]}px;\n  font-weight: 700;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'Services/tmdbAPI';\nimport { List, Item, Image, ImageWrap, Text } from './Cast.styled';\nimport noPhoto from 'images/noPhoto.png';\nfunction Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    api\n      .getMovieCastById(id)\n      .then(items => setCast([...items.cast]))\n      .catch(error => console.log(error));\n  }, [id]);\n\n  if (cast.length < 1) {\n    return null;\n  }\n\n  return (\n    <List>\n      {cast.map(person => {\n        const { id, profile_path, name } = person;\n        const profileImage = profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : noPhoto;\n        return (\n          <Item key={id}>\n            <ImageWrap>\n              <Image src={profileImage} alt={name} />\n            </ImageWrap>\n\n            <Text>{name}</Text>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default Cast;\n"],"names":["List","styled","p","theme","space","Item","ImageWrap","Image","Text","id","useParams","useState","cast","setCast","useEffect","api","then","items","catch","error","console","log","length","map","person","profile_path","name","profileImage","noPhoto","src","alt"],"sourceRoot":""}